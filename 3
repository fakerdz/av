repeat task.wait() until game:IsLoaded() and game.Players.LocalPlayer

-- Price will sell
--> Rap - Rap*_G.Percent
_G.Percent = 10; --> 50%

-- Claim Mail
_G.Place = 10;
_G.WaitToClaim = 30;

-- Hop Server
_G.Seconds = 300;
_G.Refresh = 10;
_G.Min = 15;

local Client = game.Players.LocalPlayer

local l_ReplicatedStorage_0 = game:GetService("ReplicatedStorage");
local Rap =  require(l_ReplicatedStorage_0.Library.Client.RAPCmds);
local v8 = require(l_ReplicatedStorage_0.Library.Items.PetItem);
local v27 = require(l_ReplicatedStorage_0.Library.Client.Network);
local v13 = require(l_ReplicatedStorage_0.Library.Client.GUI);

local v37 = v13.MailboxMachine();
local l_Frame_0 = v37.Frame;
local l_GiftsFrame_0 = l_Frame_0:FindFirstChild("GiftsFrame");
local VirtualUser = game:GetService('VirtualUser')

local best_rap_pets = {}
local function Hop()
    local Http = game:GetService("HttpService")
    local TPS = game:GetService("TeleportService")
    local Players = game:GetService("Players")
    local Client = Players.LocalPlayer
    local Api = "https://games.roblox.com/v1/games/"
    
    local _place, _id = game.PlaceId, game.JobId
    local _servers = Api .. _place .. "/servers/Public?sortOrder=Asc&limit=100"
    
    local function List(cursor)
        local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
        return Http:JSONDecode(Raw)
    end

    if Client.Character and Client.Character:FindFirstChild("HumanoidRootPart") then
        Client.Character.HumanoidRootPart.Anchored = true
    end
    
    local Servers = List()
    local foundServer = false

    pcall(function()
        for _, server in ipairs(Servers.data) do
            if server.playing >= _G.Min and server.playing < 40 and server.id ~= _id then
                TPS:TeleportToPlaceInstance(_place, server.id, Client)
                foundServer = true
                break
            end
        end
    end)

    if not foundServer then
        print("Không tìm thấy server dưới 40 người chơi.")
    end
end

local l_Library_0 = l_ReplicatedStorage_0:WaitForChild("Library");
local v9 = require(l_Library_0.Functions);

local function ClaimMail()

    --local readytoClaim = {}
    local l_ItemsFrame_1 = l_GiftsFrame_0.ItemsFrame;
    for _, v150 in next, (l_ItemsFrame_1:GetChildren()) do
        if v150 and not v150:IsA("UIPadding") and not v150:IsA("UIGridLayout") then
            --table.insert(readytoClaim, v150.Name)
            v27.Invoke("Mailbox: Claim", {v150.Name})
            print("YESSS")
        end;
    end;
end

if game.PlaceId == 19006211286 then
    local Count = 0;
    local Reset = 0;

    v27.Fire("Booths_WipeSavedListings");
    v27.Invoke("Booths_ClaimAnyBooth");

    task.spawn(function()
        while true do

            for _, v20 in pairs(v8:All()) do
                if v20 and not v20:IsHuge() then
                    local value = l_ReplicatedStorage_0.__DIRECTORY.Pets:FindFirstChild(v20._data.id) and require(l_ReplicatedStorage_0.__DIRECTORY.Pets[v20._data.id]).difficulty
                    local rap = Rap.Get(v20)
                    if value and rap then
                        table.insert(best_rap_pets, {rap = rap, dmg = value, pet = v20})
            
                        table.sort(best_rap_pets, function(a, b)
                            return a.dmg > b.dmg
                        end)
                    end
                end
            end
            
            for _, pet in ipairs(best_rap_pets) do
                if pet.pet and pet.pet._uid then
                    local v208, v209
                    local uid = pet.pet._uid
                    local amount = pet.pet._data and pet.pet._data._am or 1
                    local price = math.floor(pet.rap - pet.rap * _G.Percent / 100)
                    local old = tick()
                    if Reset == _G.Refresh then
                        break;
                    end
            
                    local attempts = 0  -- Bộ đếm số lần thử
                    repeat
                        if Reset == _G.Refresh then
                            break;
                        end
                        if pet.pet._data and pet.pet._data._lk then
                            v27.Invoke("Locking_SetLocked", uid, false)
                        end
                        v208, v209 = v27.Invoke("Booths_CreateListing", uid, price, amount)
                        
                        if v208 then
                            print("Place success")
                            break
                        else
                            if v209 and v209:find("enough") then
                                continue
                            else
                                warn(v209)
                                attempts = attempts + 1
                            end
                        end
                        task.wait(_G.Place)
                    until v208 or attempts >= 2 or tick() - old >= _G.Place
            
                    if not v208 and attempts >= 2 then
                        print("Failed after 2 attempts:")
                        print("UID:", uid)
                        print("Price:", price)
                        print("Amount:", amount)
                        print("Pet ID:", pet.pet._data and pet.pet._data.id)
                    end
                end
            end
            task.wait()
        end
    end)
    
    task.spawn(function()
        while task.wait(1) do
            if Count == _G.Seconds then
                Hop();
            end
            if Reset == _G.Refresh then
                -- for _, pet in ipairs(best_rap_pets) do
                --     v27.Invoke("Booths_RemoveListing", pet.pet._uid)
                -- end
                best_rap_pets = {};
                Reset = 0;
            end
            Count+=1;
            Reset+=1
            print(Count)
        end
    end)

    task.spawn(function()
        while true do
            ClaimMail();
            task.wait(_G.WaitToClaim)
        end
    end)
else
    repeat
        if Client and Client.Character then
            local hrp = Client.Character:FindFirstChild("HumanoidRootPart")
            if hrp then
                pcall(function()
                    hrp.CFrame = workspace.MAP.TradingPlazaPortal.PortalPart.CFrame
                end)
            end
        end
        task.wait(1)
    until false
end

Client.Idled:connect(function()
    VirtualUser:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    wait(1)
    VirtualUser:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)
